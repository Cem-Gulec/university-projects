Object subclass: #Dota	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!Dota subclass: #GameArena	instanceVariableNames: 'turn'	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameArena class	instanceVariableNames: ''!!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:55'!playTurn: player vs: player2	|chosenAction actionsList isEnded|	isEnded := false.	actionsList := {'Attack'. 'Use Health Potion'. 'Use Mana Potion'. (player getHero) getSkill1 className. (player getHero) getSkill2 className}.		[isEnded = false]	whileTrue: [		chosenAction := UIManager default chooseFrom: actionsList message: (player getName), ' turn (' , (player getHero) className, ')'.		chosenAction = 1 ifTrue: [			isEnded := true.		].	].		! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 23:15'!effectSkill: player hero: hero skill: skill! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:44'!useHpPotion: player hero: hero! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:44'!useManaPotion: player hero: hero! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:53'!start	"This method is the main of the game. The hero selection, buying items etc. and the turn-based game is implemented in this method."	|scourgeList sentinelList chosenHero player1 player2 minCost maxCapacity initialGold|		"Game global variables"	initialGold := 11000.	minCost := 200.	maxCapacity := 4.		"Choose a Scourge hero and create Player 1"	scourgeList := Scourge subclasses.	chosenHero := (scourgeList at: (UIManager default chooseFrom: scourgeList message: 'Choose a hero from Scourge list for Player 1')) new.	player1 := Player newPlayer: 'Player 1' faction: Scourge choosenHero: chosenHero initialGold: initialGold.		"Choose a Sentinel hero and create Player 2"	sentinelList := Sentinel subclasses.	chosenHero := (scourgeList at: (UIManager default chooseFrom: sentinelList message: 'Choose a hero from Sentinel list for Player 2')) new.	player2 := Player newPlayer: 'Player 2' faction: Sentinel choosenHero: chosenHero initialGold: initialGold.		Transcript  open; clear.	"Buy some items for Player 1"	"self marketForPlayer: player1 maxCapacity: maxCapacity  minCost: minCost."		"Buy some items for Player 2"	"self marketForPlayer: player2 maxCapacity: maxCapacity  minCost: minCost."		"So far, we have chosen our heroes and buy items for them, now it is turn to play the game"	self playTurn: player1 vs: player2.	"  [(((player1 getHero) getHP) ~= 0) & (((player2 getHero) getHP) ~= 0)]  whileTrue: [	Transcript open; 		show: 'The game is started...'.]."  "If HP of an hero reaches to zero, the game ends as it goes out of the loop".  Transcript cr;show:'The game is finished'.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:31'!buyItem: item player: player	player setGold: (player getGold) - (item getCost).	(player getHero) addItem: item.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:47'!marketForPlayer: player maxCapacity: maxCapacity minCost: minCost	|itemList chosenItem usedCapacity|	usedCapacity := 0.	itemList := Item subclasses.	[(player getGold) >= minCost & usedCapacity < maxCapacity]	whileTrue: [		chosenItem := (itemList at:(UIManager default 			chooseFrom: itemList 			message: 'Choose an Item for ', player getName, 				' (Remaining item slot = ', (maxCapacity - usedCapacity) asString, 				', Remaining gold = ', (player getGold) asString, ')')) 			new.					player getGold < chosenItem getCost		ifTrue: [			Transcript cr;show:(player getName ); show: ' can''t afford '; show: chosenItem; 				cr; show: 'It''s '; show:(chosenItem getCost); show:' golds and '; 					show:(player getName ); show:' has just '; show: player getGold; show:' golds'.		]		ifFalse: [			(usedCapacity) + (chosenItem getWeight) > maxCapacity			ifTrue: [				Transcript cr;show: chosenItem; show: ' is too heavy.'; 					cr; show:(player getName ); show:' has '; show:(maxCapacity - usedCapacity); show:' empty slots.'.			]			ifFalse:[				self buyItem: chosenItem player: player.			].		].		usedCapacity := (player getHero) calculateWeight.	].! !Dota subclass: #Hero	instanceVariableNames: 'hp maxHp mana maxMana skill1 skill2 armor minDamage maxDamage items manaPotions hpPotions'	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:13'!getHp	^hp.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:40'!setSkill1: s1 setSkill2: s2	skill1 := s1.	skill2 := s2.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:37'!getArmor	^armor.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:15'!getMaxHp	^maxHp.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 20:11'!addItem: item	item getIsHpPotion = true		ifTrue: [hpPotions := hpPotions, {item}.].	item getIsManaPotion = true		ifTrue: [manaPotions := manaPotions, {item}.].	(item getIsHpPotion) = true | (item getIsManaPotion) = true		ifFalse: [items := items, {item}.].! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:28'!calculateDamage: enemyArmor	|actualDamage givenDamage|	givenDamage := (minDamage to: maxDamage) atRandom.	actualDamage := givenDamage * (1 - ((0.06 * enemyArmor)/(1.0 + (0.06 * enemyArmor)))).	^actualDamage rounded.	! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 23:44'!calculateWeight	^(((manaPotions size) + (hpPotions size)) * 0.5) + ((items size) * 1.0).! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:41'!getItems	^items.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:16'!setMaxHp: initial	maxHp := initial.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:37'!getMaxDamage	^maxDamage.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:41'!getHpPotions	^hpPotions.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 19:57'!createInitialLists	items := #().	manaPotions := #().	hpPotions := #().! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:41'!setArmor: initial	armor := initial.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:23'!setMana: initial	mana := initial.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:17'!setMaxMana: initial	maxMana := initial.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:35'!getSkill1	^skill1.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:15'!getMaxMana	^maxMana.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:31'!setMinDamage: min setMaxDamage: max	minDamage := min.	maxDamage := max.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:37'!getMinDamage	^minDamage.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:35'!getMana	^mana.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 23:20'!getCoolDownSkills! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:35'!getSkills	^skill1, skill2.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:41'!getManaPotions	^manaPotions.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:35'!getSkill2	^skill2.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:38'!getDamage	^minDamage + '-' + maxDamage.! !!Hero methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:15'!setHp: initialHP	hp := initialHP.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Hero class	instanceVariableNames: ''!!Hero class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:49'!new	^self subclassResponsibility.! !Dota subclass: #Item	instanceVariableNames: 'cost damage isHpPotion isManaPotion weight'	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 18:02'!setDamage: initial	damage := initial.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 18:01'!getWeight	^weight.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 18:43'!getIsHpPotion	^isHpPotion.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 18:04'!setWeight: initial	weight := initial.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 18:44'!getIsManaPotion	^isManaPotion.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:59'!getCost	^cost.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 18:03'!makePotion	isPotion  := true.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 18:01'!setCost: initial	cost := initial.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 18:00'!getDamage	^damage.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 18:44'!setIsManaPotion: initial	isManaPotion := initial.! !!Item methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 18:44'!setIsHpPotion: initial	isHpPotion := initial.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Item class	instanceVariableNames: ''!!Item class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:49'!new	^self subclassResponsibility.! !Item subclass: #BattleFury	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BattleFury class	instanceVariableNames: ''!!BattleFury class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:48'!new	|item|	item := self basicNew.	item setCost: 4500.	item setWeight: 1.0.	^item.! !Item subclass: #Butterfly	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Butterfly class	instanceVariableNames: ''!!Butterfly class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:49'!new	|item|	item := self basicNew.	item setCost: 5500.	item setWeight: 1.0.	^item.! !Item subclass: #Daedalus	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Daedalus class	instanceVariableNames: ''!!Daedalus class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:49'!new	|item|	item := self basicNew.	item setCost: 5500.	item setWeight: 1.0.	^item.! !Item subclass: #Desolator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Desolator class	instanceVariableNames: ''!!Desolator class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:49'!new	|item|	item := self basicNew.	item setCost: 4000.	item setWeight: 1.0.	^item.! !Item subclass: #EnergyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EnergyBooster class	instanceVariableNames: ''!!EnergyBooster class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:49'!new	|item|	item := self basicNew.	item setCost: 1100.	item setWeight: 1.0.	^item.! !Item subclass: #HealthPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HealthPotion class	instanceVariableNames: ''!!HealthPotion class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 18:45'!new	|item|	item := self basicNew.	item setCost: 200.	item setWeight: 0.5.	item setIsHpPotion: true.	^item.! !Item subclass: #HeartOfTarrasque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HeartOfTarrasque class	instanceVariableNames: ''!!HeartOfTarrasque class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:49'!new	|item|	item := self basicNew.	item setCost: 5600.	item setWeight: 1.0.	^item.! !Item subclass: #HoodOfDefiance	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HoodOfDefiance class	instanceVariableNames: ''!!HoodOfDefiance class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:49'!new	|item|	item := self basicNew.	item setCost: 2000.	item setWeight: 1.0.	^item.! !Item subclass: #ManaPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaPotion class	instanceVariableNames: ''!!ManaPotion class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 18:45'!new	|item|	item := self basicNew.	item setCost: 200.	item setWeight: 0.5.	item setIsManaPotion: true.	^item.! !Dota subclass: #Player	instanceVariableNames: 'faction name hero gold lastAction'	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:39'!setGold: initial	gold := initial.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:38'!getFaction	^faction.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:06'!setName: initial	name := initial.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:38'!getGold	^gold.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:39'!setFaction: initial	faction := initial.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:39'!setHero: initial	hero := initial.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:38'!getHero	^hero.! !!Player methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:06'!getName	^name.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Player class	instanceVariableNames: ''!!Player class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 00:20'!newPlayer: username faction: faction choosenHero: hero initialGold: gold	|player|	player := self basicNew.	player setFaction: faction.	player setHero: hero.	player setGold: gold.	player setName: username.	^player.! !Hero subclass: #Scourge	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!Scourge subclass: #Leshrac	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Leshrac class	instanceVariableNames: ''!!Leshrac class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:39'!new	|hero|	hero := self basicNew.	hero setHp: 1518.	hero setMaxHp: 1518.	hero setMana: 1534.	hero setMaxMana: 1534.	hero setArmor: 12.	hero setMinDamage: 133 setMaxDamage: 137.	hero createInitialLists.	hero setSkill1: (SplitEarth new) setSkill2: (PulseNova new).	^hero.! !Scourge subclass: #Lion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Lion class	instanceVariableNames: ''!!Lion class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:39'!new	|hero|	hero := self basicNew.	hero setHp: 1609.	hero setMaxHp: 1609.	hero setMana: 1456.	hero setMaxMana: 1456.	hero setArmor: 9.	hero setMinDamage: 139 setMaxDamage: 145.	hero createInitialLists.	hero setSkill1: (EarthSpike new) setSkill2: (FingerOfDeath new).	^hero.! !Scourge subclass: #Mortred	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mortred class	instanceVariableNames: ''!!Mortred class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 19:50'!new	|hero|	hero := self basicNew.	hero setHp: 1754.	hero setMaxHp: 1754.	hero setMana: 892.	hero setMaxMana: 892.	hero setArmor: 18.	hero setMinDamage: 142 setMaxDamage: 144.	hero createInitialLists.	hero setSkill1: (Blur new) setSkill2: (CoupDeGrace new).	^hero.! !Scourge subclass: #NyxAssassin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NyxAssassin class	instanceVariableNames: ''!!NyxAssassin class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:39'!new	|hero|	hero := self basicNew.	hero setHp: 1784.	hero setMaxHp: 1784.	hero setMana: 1149.	hero setMaxMana: 1149.	hero setArmor: 14.	hero setMinDamage: 122 setMaxDamage: 126.	hero createInitialLists.	hero setSkill1: (Impale new) setSkill2: (ManaBurn new).	^hero.! !Hero subclass: #Sentinel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!Sentinel subclass: #Earthshaker	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Earthshaker class	instanceVariableNames: ''!!Earthshaker class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:39'!new	|hero|	hero := self basicNew.	hero setHp: 2270.	hero setMaxHp: 2270.	hero setMana: 1030.	hero setMaxMana: 1030.	hero setArmor: 10.	hero setMinDamage: 136 setMaxDamage: 146.	hero createInitialLists.	hero setSkill1: (Fissure new) setSkill2: (EnchantTotem new).	^hero.! !Sentinel subclass: #Magina	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Magina class	instanceVariableNames: ''!!Magina class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:40'!new	|hero|	hero := self basicNew.	hero setHp: 1495.	hero setMaxHp: 1495.	hero setMana: 1017.	hero setMaxMana: 1017.	hero setArmor: 14.	hero setMinDamage: 136 setMaxDamage: 140.	hero createInitialLists.	hero setSkill1: (ManaBreak new) setSkill2: (ManaVoid new).	^hero.! !Sentinel subclass: #Mirana	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mirana class	instanceVariableNames: ''!!Mirana class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:40'!new	|hero|	hero := self basicNew.	hero setHp: 1697.	hero setMaxHp: 1697.	hero setMana: 996.	hero setMaxMana: 996.	hero setArmor: 16.	hero setMinDamage: 137 setMaxDamage: 148.	hero createInitialLists.	hero setSkill1: (Starstorm new) setSkill2: (SacredArrow new).	^hero.! !Sentinel subclass: #OgreMagi	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!OgreMagi class	instanceVariableNames: ''!!OgreMagi class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:40'!new	|hero|	hero := self basicNew.	hero setHp: 2426.	hero setMaxHp: 2426.	hero setMana: 1105.	hero setMaxMana: 1105.	hero setArmor: 16.	hero setMinDamage: 126 setMaxDamage: 132.	hero createInitialLists.	hero setSkill1: (Fireblast new) setSkill2: (Multicast new).	^hero.! !Sentinel subclass: #Rylai	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Rylai class	instanceVariableNames: ''!!Rylai class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:40'!new	|hero|	hero := self basicNew.	hero setHp: 1609.	hero setMaxHp: 1609.	hero setMana: 1373.	hero setMaxMana: 1373.	hero setArmor: 9.	hero setMinDamage: 125 setMaxDamage: 131.	hero createInitialLists.	hero setSkill1: (FrostBite new) setSkill2: (FreezingField new).	^hero.! !Scourge subclass: #SkeletonKing	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SkeletonKing class	instanceVariableNames: ''!!SkeletonKing class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:39'!new	|hero|	hero := self basicNew.	hero setHp: 2270.	hero setMaxHp: 2270.	hero setMana: 993.	hero setMaxMana: 993.	hero setArmor: 11.	hero setMinDamage: 151 setMaxDamage: 153.	hero createInitialLists.	hero setSkill1: (WraithfireBlast new) setSkill2: (VampiricAura new).	^hero.! !Dota subclass: #Skill	instanceVariableNames: 'isPassive manaUsage isMana isDamage isDamageMulp isStun isEvasion evasionChance healDamagePerc damageMulp damageValue manaValue stunTurn remainTurn totalTurn totalCoolDown remainCoolDown'	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:22'!getRemainTurn 	^remainTurn.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:00'!getDamageMulp	^damageMulp.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:23'!getRemainCoolDown 	^remainCoolDown.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:22'!getTotalCoolDown 	^totalCoolDown.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:59'!isDamageMulp	^isDamageMulp.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:59'!isEvasion	^isEvasion.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:58'!getManaUsage	^manaUsage.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:00'!getDamageValue	^damageValue.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:59'!isStun	^isStun.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:00'!getHealDamagePerc	^healDamagePerc.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:59'!isMana	^isMana.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:22'!getTotalTurn 	^totalTurn.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:58'!isPassive	^isPassive.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:21'!getStunTurn 	^stunTurn.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:59'!isDamage	^isDamage.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 21:59'!getEvasionChance	^evasionChance.! !!Skill methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 22:03'!getManaValue 	^manaValue.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Skill class	instanceVariableNames: ''!!Skill class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 15:50'!new	^self subclassResponsibility.! !Skill subclass: #AnchorSmash	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AnchorSmash class	instanceVariableNames: ''!!AnchorSmash class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Blur	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Blur class	instanceVariableNames: ''!!Blur class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:38'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #CoupDeGrace	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CoupDeGrace class	instanceVariableNames: ''!!CoupDeGrace class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 4/28/2017 17:38'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #EarthSpike	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EarthSpike class	instanceVariableNames: ''!!EarthSpike class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #EnchantTotem	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EnchantTotem class	instanceVariableNames: ''!!EnchantTotem class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #FingerOfDeath	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FingerOfDeath class	instanceVariableNames: ''!!FingerOfDeath class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Fireblast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fireblast class	instanceVariableNames: ''!!Fireblast class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Fissure	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fissure class	instanceVariableNames: ''!!Fissure class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #FreezingField	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FreezingField class	instanceVariableNames: ''!!FreezingField class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #FrostBite	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FrostBite class	instanceVariableNames: ''!!FrostBite class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #GodsStrength	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GodsStrength class	instanceVariableNames: ''!!GodsStrength class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Impale	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Impale class	instanceVariableNames: ''!!Impale class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #ManaBreak	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaBreak class	instanceVariableNames: ''!!ManaBreak class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #ManaBurn	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaBurn class	instanceVariableNames: ''!!ManaBurn class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #ManaVoid	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaVoid class	instanceVariableNames: ''!!ManaVoid class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:51'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Multicast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Multicast class	instanceVariableNames: ''!!Multicast class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #PulseNova	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PulseNova class	instanceVariableNames: ''!!PulseNova class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Ravage	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ravage class	instanceVariableNames: ''!!Ravage class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #SacredArrow	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SacredArrow class	instanceVariableNames: ''!!SacredArrow class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #SplitEarth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SplitEarth class	instanceVariableNames: ''!!SplitEarth class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #Starstorm	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Starstorm class	instanceVariableNames: ''!!Starstorm class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Skill subclass: #StormHammer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!StormHammer class	instanceVariableNames: ''!!StormHammer class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Sentinel subclass: #Sven	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sven class	instanceVariableNames: ''!!Sven class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:40'!new	|hero|	hero := self basicNew.	hero setHp: 2198.	hero setMaxHp: 2198.	hero setMana: 874.	hero setMaxMana: 874.	hero setArmor: 14.	hero setMinDamage: 149 setMaxDamage: 151.	hero createInitialLists.	hero setSkill1: (StormHammer new) setSkill2: (GodsStrength new).	^hero.! !Scourge subclass: #Tidehunter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tidehunter class	instanceVariableNames: ''!!Tidehunter class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/17/2017 01:39'!new	|hero|	hero := self basicNew.	hero setHp: 2316.	hero setMaxHp: 2316.	hero setMana: 998.	hero setMaxMana: 998.	hero setArmor: 11.	hero setMinDamage: 139 setMaxDamage: 145.	hero createInitialLists.	hero setSkill1: (AnchorSmash new) setSkill2: (Ravage new).	^hero.! !Skill subclass: #VampiricAura	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VampiricAura class	instanceVariableNames: ''!!VampiricAura class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !Item subclass: #Vanguard	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Vanguard class	instanceVariableNames: ''!!Vanguard class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:50'!new	|item|	item := self basicNew.	item setCost: 2500.
	item setWeight: 1.0.	^item.! !Item subclass: #VitalyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VitalyBooster class	instanceVariableNames: ''!!VitalyBooster class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:50'!new	|item|	item := self basicNew.	item setCost: 1200.	item setWeight: 1.0.	^item.! !Skill subclass: #WraithfireBlast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2013400105'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WraithfireBlast class	instanceVariableNames: ''!!WraithfireBlast class methodsFor: 'as yet unclassified' stamp: 'EnesCakir 5/16/2017 17:52'!new	|skill|	skill := self basicNew.	^skill.! !